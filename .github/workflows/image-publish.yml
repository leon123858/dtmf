# 工作流程的名稱，會顯示在 GitHub Actions 頁面上
name: Docker Image CD

# 定義觸發此工作流程的事件
on:
  # 當有程式碼推送到 main 分支時觸發
  push:
    branches: ['main']
  # 允許您從 Actions 頁面手動觸發此工作流程
  workflow_dispatch:

# 定義工作流程中的任務
jobs:
  # 定義一個名為 "build-and-push" 的任務
  build-and-push:
    # 指定此任務運行的虛擬環境
    runs-on: ubuntu-latest

    # 授予此任務所需的權限
    permissions:
      contents: read # 讀取儲存庫內容的權限 (例如 checkout)
      packages: write # 將套件(Docker image)寫入 GitHub Packages 的權限

    # 任務執行的步驟
    steps:
      # 步驟一：簽出(Checkout)您的程式碼
      # 使用官方的 checkout action 來取得儲存庫的程式碼
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步驟二：登入 GitHub Container Registry (GHCR)
      # 使用 docker/login-action 來登入，以便後續可以推送 image
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # github.repository_owner 會自動解析為您的 GitHub 使用者名稱或組織名稱
          # GITHUB_TOKEN 是一個由 GitHub Actions 自動產生的秘密權杖，用於驗證
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 步驟三：建置 Docker 映像檔
      # 根據您的要求，直接執行 docker build 命令。
      # 為了能推送到 GHCR，我們將 image 命名為 ghcr.io/OWNER/dtmf:latest 的格式。
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/dtmf:latest .

      # 步驟四：推送 Docker 映像檔 (預設關閉)
      # 如果您需要將建置好的映像檔推送到 GHCR，請將下面兩行最前面的 '#' 拿掉來取消註解
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/dtmf:latest
  push-docker-image-to-gcp:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    # should set secrets in github repository
    # GCP_SA_KEY: Google Cloud Service Account Key (JSON format)
    # REGISTER_NAME: GCP Artifact Registry URL (e.g., asia-east1-docker.pkg.dev)
    # GCP_PROJECT_ID: Your Google Cloud Project ID

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pull image in GCR
        run: |
          docker pull ghcr.io/${{ github.repository }}:latest

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      # sample url: asia-east1-docker.pkg.dev/division-trip-money/backend
      - name: 'Push Docker image to GCP Artifact Registry'
        run: |
          gcloud auth configure-docker ${{ secrets.REGISTER_NAME }} --quiet
          docker tag ghcr.io/${{ github.repository }}:latest ${{ secrets.REGISTER_NAME }}/${{ secrets.GCP_PROJECT_ID }}/frontend/dtm:latest
          docker push ${{ secrets.REGISTER_NAME }}/${{ secrets.GCP_PROJECT_ID }}/frontend/dtm:latest
